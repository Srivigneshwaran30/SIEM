 üü¢ MODULE 1: LOG SOURCES


## ‚≠ê 1Ô∏è‚É£ What Are Log Sources?

Log sources are any systems or devices that generate events or logs you want to collect and analyze.

Logs are **digital footprints** of:

* User activity
* System behavior
* Security events

**In SIEM**, these logs are the *fuel* for detection.

---

## ‚≠ê 2Ô∏è‚É£ Why Are Log Sources Important?

‚úÖ Logs tell you:

* Who did what
* When it happened
* Where it came from
* Whether it was successful or failed

‚úÖ Without logs, SIEM = blind.

‚úÖ Good coverage across multiple sources = high detection capability.

---

## ‚≠ê 3Ô∏è‚É£ Common Categories of Log Sources

I‚Äôm giving you a *research-friendly list*, with examples:

### üîπ a) Operating System Logs

* **Linux:**

  * `/var/log/auth.log` ‚Äî authentication events (login, sudo)
  * `/var/log/syslog` ‚Äî system events
* **Windows:**

  * Security Event Log ‚Äî logon events, policy changes
  * Application Event Log

‚úÖ *These are core security logs.*

---

### üîπ b) Network Device Logs

* Firewalls (pfSense, Cisco ASA)
* Routers, Switches
* Load balancers

‚úÖ Usually sent via Syslog.

---

### üîπ c) Application Logs

* Web server access logs (Apache, Nginx)

  * Path: `/var/log/nginx/access.log`
* Application error logs

‚úÖ Good for detecting:

* Path traversal
* SQL injection attempts
* Brute-force login

---

### üîπ d) Security Tools

* IDS/IPS logs (Snort, Suricata)
* Antivirus logs

‚úÖ Often high-value alerts.

---

### üîπ e) Cloud Logs

* AWS CloudTrail
* Azure Activity Log
* GCP Audit Logs

‚úÖ *Optional for your MVP ‚Äî can be added later.*

---

## ‚≠ê 4Ô∏è‚É£ What Logs Should We Start With?

For your **first version**, I recommend:

‚úÖ **Linux logs:**

* `/var/log/auth.log` ‚Äî detect failed logins
* `/var/log/syslog` ‚Äî general system activity

‚úÖ **Web server logs:**

* `/var/log/nginx/access.log` or Apache logs

‚úÖ **Syslog:**

* Receive logs from other devices via UDP port 514

**These 3 are enough for MVP.**

---

## ‚≠ê 5Ô∏è‚É£ Log Sample Examples

I‚Äôll give examples so you can see what parsing needs to handle.

### ‚ú® Example 1: Linux auth.log

```
Jul  9 12:23:01 ubuntu sshd[1234]: Failed password for invalid user admin from 192.168.1.10 port 51422 ssh2
```

Fields to extract:

* Timestamp
* Process (`sshd`)
* Event (`Failed password`)
* Username
* Source IP

---

### ‚ú® Example 2: Nginx Access Log

```
192.168.1.15 - - [09/Jul/2025:12:24:01 +0000] "GET /login HTTP/1.1" 200 612 "-" "Mozilla/5.0"
```

Fields to extract:

* Source IP
* Timestamp
* HTTP method & path
* Response code
* User agent

---

### ‚ú® Example 3: Syslog Message

```
<13>Jul  9 12:25:01 firewall1 kernel: [UFW BLOCK] IN=eth0 OUT= MAC=... SRC=10.0.0.5 DST=192.168.1.100 ...
```

Fields to extract:

* Priority
* Timestamp
* Hostname
* Event type
* Source/Destination IP

---

## ‚≠ê 6Ô∏è‚É£ Design Considerations

When you select log sources:

‚úÖ **Consistency:**

* Each log format is different.
* Parser must know which log type is being ingested.

‚úÖ **Volume:**

* Web logs = high volume.
* Auth logs = medium volume.

‚úÖ **Retention:**

* Decide how long to keep logs.

‚úÖ **Security:**

* Logs may contain sensitive info.
* Protect log files & DB.

---

## ‚≠ê 7Ô∏è‚É£ Our SIEM‚Äôs MVP Log Source Plan

| Log Type       | Collection Method | Parser |
| -------------- | ----------------- | ------ |
| Linux auth.log | File tail         | Regex  |
| Syslog         | UDP listener      | Regex  |
| Nginx access   | File tail         | Regex  |

**Optional Later:**

* Windows Event Logs (needs agent or API)
* Cloud logs (API fetch)

---

## ‚≠ê 8Ô∏è‚É£ Research Actions For You

‚úÖ Read about:

* What each log contains (fields, examples)
* How Syslog protocol works (RFC 5424)
* Typical attack patterns in logs (failed login, HTTP 500, etc.)

‚úÖ Collect a few sample log files to test your parser later.

